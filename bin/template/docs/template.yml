sdks:
  dns:
    readme: |
      <?php
      require_once(__DIR__ . '/vendor/autoload.php');

      use OpenAPI\Client\Dns;

      try {
          $instance = new Dns('YOUR-API-TOKEN');
          $result = $instance->CheckNameServersApi->checkNameServer('example.com', 'text/plain');
          
          print_r("$result \n");
      } catch (Exception $e) {
          echo 'Exception when calling AppsApi->getApps: ', $e->getMessage(), PHP_EOL;
      }
    classes:
      ZoneApi:
        examples:
          createZone: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Dns;

            try {
                $instance = new Dns('YOUR-API-TOKEN');
                $body = new \OpenAPI\Client\Model\CreateZoneRequest();
                $body->setName('example.com');
                $result = $instance->ZoneApi->createZone($body);

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling AppsApi->getApps: ', $e->getMessage(), PHP_EOL;
            }
          deleteZone: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Dns;

            try {
                $instance = new Dns('YOUR-API-TOKEN');
                $result = $instance->ZoneApi->deleteZone('example.com');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling AppsApi->getApps: ', $e->getMessage(), PHP_EOL;
            }
          getListZones: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Dns;

            try {
                $instance = new Dns('YOUR-API-TOKEN');
                $result = $instance->ZoneApi->getListZones();

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling AppsApi->getApps: ', $e->getMessage(), PHP_EOL;
            }
          getZone: | 
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Dns;

            try {
                $instance = new Dns('YOUR-API-TOKEN');
                $result = $instance->ZoneApi->getZone('example.com');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling AppsApi->getApps: ', $e->getMessage(), PHP_EOL;
            }
      CheckNameServersApi:
        examples:
          checkNameServer: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Dns;

            try {
                $instance = new Dns('YOUR-API-TOKEN');
                $result = $instance->CheckNameServersApi->checkNameServer('example.com', 'text/plain');
                
                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling AppsApi->getApps: ', $e->getMessage(), PHP_EOL;
            }
      DnsRecordApi:
        examples:
          createDnsRecord: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Dns;

            try {
                $instance = new Dns('YOUR-API-TOKEN');
                $body = new \OpenAPI\Client\Model\DnsRecord();
                $body->setName('example-record');
                $body->setType('A');
                $body->setTtl('7200');
                $body->setContents([
                    [
                        "ip" => "1.2.3.4"
                    ]
                ]);
                $result = $instance->DnsRecordApi->createDnsRecord('example.com', $body);

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          deleteDnsRecord: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Dns;

            try {
                $instance = new Dns('YOUR-API-TOKEN');
                $result = $instance->DnsRecordApi->deleteDnsRecord('example.com', 'id-example');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          editDnsRecord: | 
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Dns;

            try {
                $instance = new Dns('YOUR-API-TOKEN');
                $body = new \OpenAPI\Client\Model\DnsRecord();
                $body->setName('example-record');
                $body->setType('A');
                $body->setTtl('7200');
                $body->setContents([
                    [
                        "ip" => "1.2.3.4"
                    ]
                ]);
                $result = $instance->DnsRecordApi->editDnsRecord('example.com', 'id-example', $body);

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          getDnsRecord: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Dns;

            try {
                $instance = new Dns('YOUR-API-TOKEN');
                $result = $instance->DnsRecordApi->getDnsRecord('example.com', 'id-example');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          getListDnsRecords: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Dns;

            try {
                $instance = new Dns('YOUR-API-TOKEN');
                $result = $instance->DnsRecordApi->getListDnsRecords('example.com');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
  mail:
    readme: |
      <?php
      require_once(__DIR__ . '/vendor/autoload.php');

      use OpenAPI\Client\Mail;

      try {
          $instance = new Mail('YOUR-API-TOKEN');
          $result = $instance->MailsApi->getMails();

          print_r("$result \n");
      } catch (Exception $e) {
          echo 'Exception when calling AppsApi->getApps: ', $e->getMessage(), PHP_EOL;
      }
    classes:
      AccountsApi:
        examples:
          checkMailAvailable: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Mail;

            try {
                $instance = new Mail('YOUR-API-TOKEN');
                $result = $instance->AccountsApi->checkMailAvailable('example-id', 'example-account');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          createMailACcount: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Mail;

            try {
                $instance = new Mail('YOUR-API-TOKEN');
                $body = new \OpenAPI\Client\Model\Model5();
                $body->setName('example-name');
                $result = $instance->AccountsApi->createMailACcount('example-id', $body);

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          deleteMailAccount: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Mail;

            try {
                $instance = new Mail('YOUR-API-TOKEN');
                $result = $instance->AccountsApi->deleteMailAccount('example-id', 'account-id');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          getAllMailAccounts: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Mail;

            try {
                $instance = new Mail('YOUR-API-TOKEN');
                $result = $instance->AccountsApi->getAllMailAccounts('example-id');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
      AttachmentsApi:
        examples:
          downloadAttachments: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Mail;

            try {
                $instance = new Mail('YOUR-API-TOKEN');
                $result = $instance->AttachmentsApi->downloadAttachments('example-id', 'message-id', 'attachment-id');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          getAllAttachments: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Mail;

            try {
                $instance = new Mail('YOUR-API-TOKEN');
                $result = $instance->AttachmentsApi->getAllAttachments('example-id', 'message-id');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
      EventApi:
        examples:
          getAllEvents: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Mail;

            try {
                $instance = new Mail('YOUR-API-TOKEN');
                $result = $instance->EventApi->getAllEvents('example-id', 'message-id', 1, 15);

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
      ForwardApi:
        examples:
          createAddressForwarding: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Mail;

            try {
                $instance = new Mail('YOUR-API-TOKEN');
                $body = new \OpenAPI\Client\Model\Model6();
                $body->setAddress('example-address');
                $result = $instance->ForwardApi->createAddressForwarding('example-id', 'account-id');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          deleteExtraEndpoint: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Mail;

            try {
                $instance = new Mail('YOUR-API-TOKEN');
                $result = $instance->ForwardApi->deleteExtraEndpoint('example-id', 'account-id', 'address-id');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          getListAddressForwarding: | 
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Mail;

            try {
                $instance = new Mail('YOUR-API-TOKEN');
                $result = $instance->ForwardApi->getListAddressForwarding('example-id', 'account-id');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
      InboundrulesApi:
        examples:
          addInboundRule: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Mail;

            try {
                $instance = new Mail('YOUR-API-TOKEN');
                $body = new \OpenAPI\Client\Model\Model11();
                $body->setRule('example-rule');
                $result = $instance->InboundrulesApi->addInboundRule('example-id', $body);

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          deleteInboundRule: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Mail;

            try {
                $instance = new Mail('YOUR-API-TOKEN');
                $result = $instance->InboundrulesApi->deleteInboundRule('example-id', 'inboundrule-id');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          getAllInboundRules: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Mail;

            try {
                $instance = new Mail('YOUR-API-TOKEN');
                $result = $instance->InboundrulesApi->getAllInboundRules('example-id',);

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
      MailsApi:
        examples:
          changeMailServerPlan: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Mail;

            try {
                $instance = new Mail('YOUR-API-TOKEN');
                $body = new \OpenAPI\Client\Model\Model10();
                $body->setPlan('example-plan');
                $result = $instance->MailsApi->changeMailServerPlan('example-id',);

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          checkDomainAvailable: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Mail;

            try {
                $instance = new Mail('YOUR-API-TOKEN');
                $result = $instance->MailsApi->checkDomainAvailable('example.com');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          checkMailServerDnsStatus: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Mail;

            try {
                $instance = new Mail('YOUR-API-TOKEN');
                $result = $instance->MailsApi->checkMailServerDnsStatus('example-id');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          deleteMailServer: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Mail;

            try {
                $instance = new Mail('YOUR-API-TOKEN');
                $result = $instance->MailsApi->deleteMailServer('example-id');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          getCountFreeMails: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Mail;

            try {
                $instance = new Mail('YOUR-API-TOKEN');
                $result = $instance->MailsApi->getCountFreeMails('example-id');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          getCountMails: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Mail;

            try {
                $instance = new Mail('YOUR-API-TOKEN');
                $result = $instance->MailsApi->getCountMails('example-id', 30);

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          getMails: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Mail;

            try {
                $instance = new Mail('YOUR-API-TOKEN');
                $result = $instance->MailsApi->getMails();

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling AppsApi->getApps: ', $e->getMessage(), PHP_EOL;
            }
          getSingleMailServer: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Mail;

            try {
                $instance = new Mail('YOUR-API-TOKEN');
                $result = $instance->MailsApi->getSingleMailServer('example-id');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          postMails: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Mail;

            try {
                $instance = new Mail('YOUR-API-TOKEN');
                $body = new \OpenAPI\Client\Model\Model1();
                $body->setDomain('example.com');
                $body->setPlan('example-plan');
                $body->setMode('DEV');
                $result = $instance->MailsApi->postMails($body);

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          editMailServer: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Mail;

            try {
                $instance = new Mail('YOUR-API-TOKEN');
                $body = new \OpenAPI\Client\Model\Model8();
                $body->setMode('DEV');
                $body->setInboundSpamThreshold(0);
                $result = $instance->MailsApi->editMailServer($body);

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
      MessagesApi:
        examples:
          generateTemporary: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Mail;

            try {
                $instance = new Mail('YOUR-API-TOKEN');
                $result = $instance->MessagesApi->generateTemporary('example-id', 'message-id', 1);

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          getAllMails: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Mail;

            try {
                $instance = new Mail('YOUR-API-TOKEN');
                $result = $instance->MessagesApi->getAllMails('example-id', 1, 15, 'incoming', 'state', 'subject', 'from', 'to');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          getSingleMail: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Mail;

            try {
                $instance = new Mail('YOUR-API-TOKEN');
                $result = $instance->MessagesApi->getSingleMail('example-id', 'message-id');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          getSingleMailHtml: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Mail;

            try {
                $instance = new Mail('YOUR-API-TOKEN');
                $result = $instance->MessagesApi->getSingleMailHtml('example-id', 'message-id', 'token');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          sendMail: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Mail;

            try {
                $instance = new Mail('YOUR-API-TOKEN');
                $body = new \OpenAPI\Client\Model\Model3();

                $body->setHtml('example-html');
                $body->setFrom('example-from');
                $body->setTo('example-to');
                $body->setSubject('example-subject');
                $body->setText('example-text');
                $body->setReplyto('example-replyto');
                $body->setAttachments([
                    [
                        'name' => 'example-name',
                        'content_type' => 'example-content_type',
                        'data' => 'example-data'
                    ]
                ]);

                $result = $instance->MessagesApi->sendMail('example-id', $body);

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
      SmtpApi:
        examples:
          deleteSmtpCredential: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Mail;

            try {
                $instance = new Mail('YOUR-API-TOKEN');
                $result = $instance->SmtpApi->deleteSmtpCredential('example-id', 'username-example');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          generateCredentials: |  
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Mail;

            try {
                $instance = new Mail('YOUR-API-TOKEN');
                $body = new \OpenAPI\Client\Model\Model4();
                $body->setDescription('example-description');
                $result = $instance->SmtpApi->generateCredentials('example-id', $body);

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          getCredential: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Mail;

            try {
                $instance = new Mail('YOUR-API-TOKEN');
                $result = $instance->SmtpApi->getCredential('example-id');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          revokeCredentials: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Mail;

            try {
                $instance = new Mail('YOUR-API-TOKEN');
                $body = new \OpenAPI\Client\Model\Model9();
                $body->setUsername('example-username');
                $result = $instance->SmtpApi->revokeCredentials('example-id', $body);

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
  paas:
    readme: | 
      <?php
      require_once(__DIR__ . '/vendor/autoload.php');

      use OpenAPI\Client\Paas;

      try {
          $instance = new Paas('YOUR-API-TOKEN');
          $result = $instance->AppsApi->getApps();
          print_r("$result \n");
      } catch (Exception $e) {
          echo 'Exception when calling AppsApi->getApps: ', $e->getMessage(), PHP_EOL;
      }
    classes:
      AppsApi:
        examples:
          changePlan: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Paas;

            try {
                $instance = new Paas('YOUR-API-TOKEN');
                $body = new \OpenAPI\Client\Model\ChangePlanRequest();
                $body->setPlanId('example-plan-id');
                $result = $instance->AppsApi->changePlan('name-example', $body);

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          createApp: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Paas;

            try {
                $instance = new Paas('YOUR-API-TOKEN');
                $body = new \OpenAPI\Client\Model\CreateApp();
                $body->setPlanId('example-plan-id');
                $body->setName('example-name');
                $body->setPlatform('example-platform');
                $result = $instance->AppsApi->createApp($body);

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          deleteAppByName: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Paas;

            try {
                $instance = new Paas('YOUR-API-TOKEN');
                $result = $instance->AppsApi->deleteAppByName('name-example');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          getAppApplets: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Paas;

            try {
                $instance = new Paas('YOUR-API-TOKEN');
                $result = $instance->AppsApi->getAppApplets('name-example');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          getAppByName:
          getAppLogs: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Paas;

            try {
                $instance = new Paas('YOUR-API-TOKEN');
                $result = $instance->AppsApi->getAppByName('name-example');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          getAppReleases: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Paas;

            try {
                $instance = new Paas('YOUR-API-TOKEN');
                $result = $instance->AppsApi->getAppReleases('name-example', 1, 15);

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          getApps: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Paas;

            try {
                $instance = new Paas('YOUR-API-TOKEN');
                $result = $instance->AppsApi->getApps();
                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling AppsApi->getApps: ', $e->getMessage(), PHP_EOL;
            }
          restartApp: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Paas;

            try {
                $instance = new Paas('YOUR-API-TOKEN');
                $result = $instance->AppsApi->restartApp('name-example');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          turnApp: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Paas;

            try {
                $instance = new Paas('YOUR-API-TOKEN');
                $body = new OpenAPI\Client\Model\TurnAppRequest();
                $body->setScale(0);
                $result = $instance->AppsApi->turnApp('name-example', $body);

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
      DeployApi:
        examples:
          releasesDeploy: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Paas;

            try {
                $instance = new Paas('YOUR-API-TOKEN');
                $body = new \OpenAPI\Client\Model\DeployReleases();
                $body->setSourceId('source-id-example');
                $result = $instance->DeployApi->releasesDeploy('name-example', $body);

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          sourcesDeploy: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Paas;

            try {
                $instance = new Paas('YOUR-API-TOKEN');
                $result = $instance->DeployApi->sourcesDeploy('name-example', './app.tar.xz');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
      DisksApi:
        examples:
          createBackup: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Paas;

            try {
                $instance = new Paas('YOUR-API-TOKEN');
                $result = $instance->DisksApi->createBackup('id-example', 'name-example');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          createDisk: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Paas;

            try {
                $instance = new Paas('YOUR-API-TOKEN');
                $body = new \OpenAPI\Client\Model\CreateDiskRequest();
                $body->setName('name-example');
                $body->setSize('size-example');
                $result = $instance->DisksApi->createDisk('id-example', $body);

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          createFtp: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Paas;

            try {
                $instance = new Paas('YOUR-API-TOKEN');
                $body = new \OpenAPI\Client\Model\CreateFtpRequest();
                $body->setUsername('name-example');
                $body->setReadOnly(true);
                $result = $instance->DisksApi->createFtp('name-example', 'dname-example', $body);

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          deleteDisk: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Paas;

            try {
                $instance = new Paas('YOUR-API-TOKEN');
                $result = $instance->DisksApi->deleteDisk('id-example', 'name-example');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          deleteFtp: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Paas;

            try {
                $instance = new Paas('YOUR-API-TOKEN');
                $result = $instance->DisksApi->deleteFtp('fname-example');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          downloadBackup: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Paas;

            try {
                $instance = new Paas('YOUR-API-TOKEN');
                $result = $instance->DisksApi->downloadBackup('id-example', 'dname-example', 'bname-example');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          getBackups: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Paas;

            try {
                $instance = new Paas('YOUR-API-TOKEN');
                $result = $instance->DisksApi->getBackups('id-example', 'dname-example');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          getDisks: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Paas;

            try {
                $instance = new Paas('YOUR-API-TOKEN');
                $result = $instance->DisksApi->getDisks('id-example');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          getFtps: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Paas;

            try {
                $instance = new Paas('YOUR-API-TOKEN');
                $result = $instance->DisksApi->getFtps('name-example', 'dname-example');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          resizeDisk: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Paas;

            try {
                $instance = new Paas('YOUR-API-TOKEN');
                $body = new \OpenAPI\Client\Model\ResizeDiskRequest();
                $body->setSize(10);
                $result = $instance->DisksApi->resizeDisk('name-example', 'dname-example', $body);

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
      DomainsApi:
        examples:
          checkDomain: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Paas;

            try {
                $instance = new Paas('YOUR-API-TOKEN');
                $result = $instance->DomainsApi->checkDomain('example.com');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          createAppDomain: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Paas;

            try {
                $instance = new Paas('YOUR-API-TOKEN');
                $body = new \OpenAPI\Client\Model\CreateAppDomainRequest();
                $body->setName('example.com');
                $body->setProject('project-name');
                $body->setType('PROJECT');

                $result = $instance->DomainsApi->createAppDomain('example.com');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          deleteDomain: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Paas;

            try {
                $instance = new Paas('YOUR-API-TOKEN');
                $result = $instance->DomainsApi->deleteDomain('example-id');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          disableSsl: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Paas;

            try {
                $instance = new Paas('YOUR-API-TOKEN');
                $result = $instance->DomainsApi->disableSsl('example-id');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          enableSsl: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Paas;

            try {
                $instance = new Paas('YOUR-API-TOKEN');
                $body = new \OpenAPI\Client\Model\EnableSslRequest();
                $body->setDomain('domain-example');
                $result = $instance->DomainsApi->enableSsl($body);

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          getAppDomains: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Paas;

            try {
                $instance = new Paas('YOUR-API-TOKEN');
                $result = $instance->DomainsApi->getAppDomains('project-example');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          redirectDomain: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Paas;

            try {
                $instance = new Paas('YOUR-API-TOKEN');
                $body = new \OpenAPI\Client\Model\RedirectDomainRequest();
                $body->setRedirectTo('example.com');
                $body->setRedirectStatus(301); // or 302
                $result = $instance->DomainsApi->redirectDomain('id-example', $body);

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          setAppDomain: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Paas;

            try {
                $instance = new Paas('YOUR-API-TOKEN');
                $body = new \OpenAPI\Client\Model\SetAppDomainRequest();
                $body->setDomainID('domain-example');
                $body->setProjectID('project-example');
                $result = $instance->DomainsApi->setAppDomain('id-example', $body);

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
      ReportsApi:
        examples:
          getAppCpuReports: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Paas;

            try {
                $instance = new Paas('YOUR-API-TOKEN');
                $result = $instance->ReportsApi->getAppCpuReports('example-name', 1697279296);

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          getAppMemoryReports: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Paas;

            try {
                $instance = new Paas('YOUR-API-TOKEN');
                $result = $instance->ReportsApi->getAppMemoryReports('example-name', 1697279296);

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          getAppNetworkReceiveReports: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Paas;

            try {
                $instance = new Paas('YOUR-API-TOKEN');
                $result = $instance->ReportsApi->getAppNetworkReceiveReports('example-name', 1697279296);

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          getAppSummaryReports: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Paas;

            try {
                $instance = new Paas('YOUR-API-TOKEN');
                $result = $instance->ReportsApi->getAppSummaryReports('example-name');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          getNetworkTransmitReports: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Paas;

            try {
                $instance = new Paas('YOUR-API-TOKEN');
                $result = $instance->ReportsApi->getNetworkTransmitReports('example-name', 1697279296);

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
      SettingsApi:
        examples:
          defaultSubdomain: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Paas;

            try {
                $instance = new Paas('YOUR-API-TOKEN');
                $result = $instance->SettingsApi->defaultSubdomain('id-name', 'status-example');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          ipStatic: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Paas;

            try {
                $instance = new Paas('YOUR-API-TOKEN');
                $result = $instance->SettingsApi->ipStatic('id-name', 'status-example');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          updateEnvs: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Paas;

            try {
                $instance = new Paas('YOUR-API-TOKEN');
                $body = new \OpenAPI\Client\Model\UpdateEnvs();
                $body->setProject('project-example');
                $body->setVariables([
                    [
                        'key' => 'key-example',
                        'value' => 'value-example'
                    ]
                ]);
                $result = $instance->SettingsApi->updateEnvs($body);

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          zeroDowntime: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Paas;

            try {
                $instance = new Paas('YOUR-API-TOKEN');
                $result = $instance->SettingsApi->zeroDowntime('id-example', 'status-example');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
  dbaas:
    readme: | 
      <?php
      require_once(__DIR__ . '/vendor/autoload.php');

      use OpenAPI\Client\Dbaas;

      try {
          $instance = new Dbaas('YOUR-API-TOKEN');
          $result = $instance->DatabasesApi->getListDatabases();

          print_r("$result \n");
      } catch (Exception $e) {
          echo 'Exception when calling AppsApi->getApps: ', $e->getMessage(), PHP_EOL;
      }
    classes:
      BackupsApi:
        examples:
          createBackup: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Dbaas;

            try {
                $instance = new Dbaas('YOUR-API-TOKEN');
                $result = $instance->BackupsApi->createBackup('id-example');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          downloadBackup: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Dbaas;

            try {
                $instance = new Dbaas('YOUR-API-TOKEN');
                $result = $instance->BackupsApi->downloadBackup('id-example', 'name-example');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          getListBackups: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Dbaas;

            try {
                $instance = new Dbaas('YOUR-API-TOKEN');
                $result = $instance->BackupsApi->getListBackups('id-example');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
      DatabasesApi:
        examples:
          changeControlPanel: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Dbaas;

            try {
                $instance = new Dbaas('YOUR-API-TOKEN');
                $result = $instance->DatabasesApi->changeControlPanel('id-example', 'status-example');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          changePublicNetwork: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Dbaas;

            try {
                $instance = new Dbaas('YOUR-API-TOKEN');
                $result = $instance->DatabasesApi->changePublicNetwork('id-example', 'status-example');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          createDatabase: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Dbaas;

            try {
                $instance = new Dbaas('YOUR-API-TOKEN');

                $body = new \OpenAPI\Client\Model\CreateDatabases();
                $body->setHostname('hostname-example');
                $body->setOptions([
                    'standaloneReplicaSet' => true
                ]);
                $body->setPublicNetwork(true);
                $body->setType('type-example');
                $body->setPlanId('planID-example');
                $body->setVersion('version-example');

                $result = $instance->DatabasesApi->createDatabase($body);

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          deleteDatabase: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Dbaas;

            try {
                $instance = new Dbaas('YOUR-API-TOKEN');
                $result = $instance->DatabasesApi->deleteDatabase('id-example');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          getDatabase: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Dbaas;

            try {
                $instance = new Dbaas('YOUR-API-TOKEN');
                $result = $instance->DatabasesApi->getDatabase('id-example');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          getListDatabases: | 
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Dbaas;

            try {
                $instance = new Dbaas('YOUR-API-TOKEN');
                $result = $instance->DatabasesApi->getListDatabases();

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling AppsApi->getApps: ', $e->getMessage(), PHP_EOL;
            }
          resizeDatabase: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Dbaas;

            try {
                $instance = new Dbaas('YOUR-API-TOKEN');
                $body = new \OpenAPI\Client\Model\ResizeDatabaseRequest();
                $body->setDisk(true);
                $body->setPlanId('plan-id-example');
                $result = $instance->DatabasesApi->resizeDatabase('id-example', $body);

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          turnDatabase: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Dbaas;

            try {
                $instance = new Dbaas('YOUR-API-TOKEN');
                $body = new \OpenAPI\Client\Model\TurnDatabaseRequest();
                $body->setScale(1);
                $result = $instance->DatabasesApi->turnDatabase('id-example', $body);

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
      ReportsApi:
        examples:
          getDatabaseCpuReports: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Dbaas;

            try {
                $instance = new Dbaas('YOUR-API-TOKEN');
                $result = $instance->ReportsApi->getDatabaseCpuReports('id-example', 1697279296);

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          getDatabaseMemoryReports: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Dbaas;

            try {
                $instance = new Dbaas('YOUR-API-TOKEN');
                $result = $instance->ReportsApi->getDatabaseMemoryReports('id-example', 1697279296);

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          getDatabaseNetworkReceiveReports: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Dbaas;

            try {
                $instance = new Dbaas('YOUR-API-TOKEN');
                $result = $instance->ReportsApi->getDatabaseNetworkReceiveReports('id-example', 1697279296);

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          getDatabaseNetworkTransmitReports: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Dbaas;

            try {
                $instance = new Dbaas('YOUR-API-TOKEN');
                $result = $instance->ReportsApi->getDatabaseNetworkTransmitReports('id-example', 1697279296);

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          getDatabaseSummaryReports: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\Dbaas;

            try {
                $instance = new Dbaas('YOUR-API-TOKEN');
                $result = $instance->ReportsApi->getDatabaseSummaryReports('id-example');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
  object-storage:
    readme: |
      <?php
      require_once(__DIR__ . '/vendor/autoload.php');

      use OpenAPI\Client\ObjectStorage;

      try {
          $instance = new ObjectStorage('YOUR-API-TOKEN');
          $result = $instance->BucketApi->getBuckets();

          print_r("$result \n");
      } catch (Exception $e) {
          echo 'Exception when calling AppsApi->getApps: ', $e->getMessage(), PHP_EOL;
      }
    classes:
      BucketApi:
        examples:
          changeBucketAccess: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\ObjectStorage;

            try {
                $instance = new ObjectStorage('YOUR-API-TOKEN');
                $result = $instance->BucketApi->changeBucketAccess('bucket-example', 'private'); // or public

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          checkBucket: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\ObjectStorage;

            try {
                $instance = new ObjectStorage('YOUR-API-TOKEN');
                $result = $instance->BucketApi->checkBucket('bucket-example');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          createBucket: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\ObjectStorage;

            try {
                $instance = new ObjectStorage('YOUR-API-TOKEN');
                $body = new \OpenAPI\Client\Model\CreateBucket();
                $body->setName('bucket-example');
                $body->setPlan('plan-example');
                $body->setPermission('permission-example');
                $result = $instance->BucketApi->createBucket($body);

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          destroyBucket: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\ObjectStorage;

            try {
                $instance = new ObjectStorage('YOUR-API-TOKEN');
                $result = $instance->BucketApi->destroyBucket('bucket-example');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          getBuckets: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\ObjectStorage;

            try {
                $instance = new ObjectStorage('YOUR-API-TOKEN');
                $result = $instance->BucketApi->getBuckets();

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling AppsApi->getApps: ', $e->getMessage(), PHP_EOL;
            }
          getListPreviousBuckets: |
            ?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\ObjectStorage;

            try {
                $instance = new ObjectStorage('YOUR-API-TOKEN');
                $result = $instance->BucketApi->getListPreviousBuckets();

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          getMigrations: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\ObjectStorage;

            try {
                $instance = new ObjectStorage('YOUR-API-TOKEN');
                $result = $instance->BucketApi->getMigrations();

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          getSingleBuckets: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\ObjectStorage;

            try {
                $instance = new ObjectStorage('YOUR-API-TOKEN');
                $result = $instance->BucketApi->getSingleBuckets('bucket-example');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          migratingBuckets: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\ObjectStorage;

            try {
                $instance = new ObjectStorage('YOUR-API-TOKEN');
                $body = new \OpenAPI\Client\Model\MigrateBucket();
                $body->setFrom('from-example');
                $body->setTo('to-example');
                $body->setPath('path-example');
                $result = $instance->BucketApi->migratingBuckets($body);

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          upgradeBucket: | 
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\ObjectStorage;

            try {
                $instance = new ObjectStorage('YOUR-API-TOKEN');
                $result = $instance->BucketApi->upgradeBucket('bucket-example', 'plan-example');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
      FolderApi:
        examples:
          createFolder: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\ObjectStorage;

            try {
                $instance = new ObjectStorage('YOUR-API-TOKEN');
                $body = new \OpenAPI\Client\Model\CreateFolder();
                $body->setPath('/example');
                $result = $instance->FolderApi->createFolder('bucket-example', $body);

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          deleteFolder: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\ObjectStorage;

            try {
                $instance = new ObjectStorage('YOUR-API-TOKEN');
                $result = $instance->FolderApi->deleteFolder('bucket-example', '/example');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
      KeyApi:
        examples:
          createKey: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\ObjectStorage;

            try {
                $instance = new ObjectStorage('YOUR-API-TOKEN');
                $body = new \OpenAPI\Client\Model\CreateKey();
                $body->setDescription('example-description');
                $body->setBuckets([
                    'example-bucket-1',
                    'example-bucket-2',
                ]);
                $result = $instance->KeyApi->createKey($body);

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          deleteKey: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\ObjectStorage;

            try {
                $instance = new ObjectStorage('YOUR-API-TOKEN');
                $result = $instance->KeyApi->deleteKey('key-example');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          getKey: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\ObjectStorage;

            try {
                $instance = new ObjectStorage('YOUR-API-TOKEN');
                $result = $instance->KeyApi->getKey('key-example');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          getListKeys: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\ObjectStorage;

            try {
                $instance = new ObjectStorage('YOUR-API-TOKEN');
                $result = $instance->KeyApi->getListKeys();

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          revokeSecretKey: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\ObjectStorage;

            try {
                $instance = new ObjectStorage('YOUR-API-TOKEN');
                $result = $instance->KeyApi->revokeSecretKey('key-example');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          updateKey: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\ObjectStorage;

            try {
                $instance = new ObjectStorage('YOUR-API-TOKEN');
                $body = new \OpenAPI\Client\Model\CreateKey();
                $body->setDescription('example-description');
                $body->setBuckets([
                    'example-bucket-1',
                    'example-bucket-2',
                ]);
                $result = $instance->KeyApi->updateKey('key-example', $body);

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
      MetricsApi:
        examples:
          getHisotricalMetrics: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\ObjectStorage;

            try {
                $instance = new ObjectStorage('YOUR-API-TOKEN');
                $result = $instance->MetricsApi->getHisotricalMetrics('key-example', 1697279296);

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          getMetricsSummary: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\ObjectStorage;

            try {
                $instance = new ObjectStorage('YOUR-API-TOKEN');
                $result = $instance->MetricsApi->getMetricsSummary('key-example');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
      ObjectApi:
        examples:
          deleteObject: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\ObjectStorage;

            try {
                $instance = new ObjectStorage('YOUR-API-TOKEN');
                $result = $instance->ObjectApi->deleteObject('bucket-example', 'prefix-example');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          downloadObject: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\ObjectStorage;

            try {
                $instance = new ObjectStorage('YOUR-API-TOKEN');
                $result = $instance->ObjectApi->downloadObject('bucket-example', 'object-example', '2 days 7 hours 45 minutes');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          getListObjects: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\ObjectStorage;

            try {
                $instance = new ObjectStorage('YOUR-API-TOKEN');
                $result = $instance->ObjectApi->getListObjects('bucket-example', 'prefix-example', 10, 1);

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          getStatObject: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\ObjectStorage;

            try {
                $instance = new ObjectStorage('YOUR-API-TOKEN');
                $result = $instance->ObjectApi->getStatObject('bucket-example', 'object-example');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }
          uploadObject: |
            <?php
            require_once(__DIR__ . '/vendor/autoload.php');

            use OpenAPI\Client\ObjectStorage;

            try {
                $instance = new ObjectStorage('YOUR-API-TOKEN');
                $result = $instance->ObjectApi->uploadObject('bucket-example', 'object-example');

                print_r("$result \n");
            } catch (Exception $e) {
                echo 'Exception when calling DnsRecordApi->createDnsRecord: ', $e->getMessage(), PHP_EOL;
            }